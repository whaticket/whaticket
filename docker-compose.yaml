version: '3'

networks:
  whaticket:

services:

  backend:
    container_name: ${BACKEND_NAME:-'Whaticket-backend'}
    hostname: ${BACKEND_NAME:-'Whaticket-backend'}
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    environment:
      - DB_DIALECT=mysql
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASS=${MYSQL_ROOT_PASSWORD:-strongpassword}
      - DB_NAME=${MYSQL_DATABASE:-whaticket}
      - JWT_SECRET=${JWT_SECRET:-3123123213123}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-75756756756}
      - BACKEND_URL=${BACKEND_URL:-http://localhost}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - PROXY_PORT=${PROXY_PORT:-8080}
      - CHROME_ARGS=--no-sandbox --disable-setuid-sandbox
      - MESSAGES_LIMIT=${MESSAGES_LIMIT:-20}
    ports:
      - ${BACKEND_PORT:-8080}:3000
    volumes:
      - ./backend/public/:/usr/src/app/public/
      - ./backend/.wwebjs_auth/:/usr/src/app/.wwebjs_auth/
    networks:
      - whaticket

  frontend:
    container_name: ${FRONTEND_NAME:-'Whaticket-frontend'}
    hostname: ${FRONTEND_NAME:-'Whaticket-frontend'}
    ports:
      - ${FRONTEND_PORT:-3000}:80
      - ${FRONTEND_SSL_PORT:-3001}:443
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    environment:
      - URL_BACKEND=backend:3000
      - REACT_APP_BACKEND_URL=${BACKEND_URL:-http://localhost}:${PROXY_PORT:-8080}/
      - FRONTEND_SERVER_NAME=${FRONTEND_SERVER_NAME}
      - BACKEND_SERVER_NAME=${BACKEND_SERVER_NAME}
      - REACT_APP_HOURS_CLOSE_TICKETS_AUTO=${FRONTEND_HOURS:-24}
      - PORT=${FRONTEND_PORT:-80}
    networks:
      - whaticket

  mysql:
    container_name: ${DATABASE_NAME:-'Whaticket-database'}
    hostname: ${DATABASE_NAME:-'Whaticket-database'}
    image: ${MYSQL_ENGINE:-mariadb}:${MYSQL_VERSION:-10.6}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_bin    
    volumes:
      - ./.docker/data/:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE:-whaticket}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-strongpassword}
      - TZ=${TZ:-America/Fortaleza}
    restart: always
    networks:
      - whaticket

# Descobrindo o container
# docker ps -a --format "table {{.ID}}\t{{.Image}}\t{{.Names}}"

# Criar um contÃªiner
# docker compose -f docker-compose.yml up --build -d